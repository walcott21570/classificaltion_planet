variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE
  DOCKER_TAG: $CI_COMMIT_SHORT_SHA

.ssh_key_template: &ssh_key_template
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
    - mkdir -p ~/.ssh
    - cp $SSH_PRIVATE_KEY ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa

  after_script:
    - rm -f ~/.ssh/id_rsa


.docker_login: &docker_login
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.docker_common: &docker_common
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:20.10.5-dind

stages:
  - build
  - lint
  - tests

build_image:
  stage: build
  <<: *docker_common
  script:
    - *docker_login
    - docker pull $DOCKER_IMAGE:latest || true
    - docker build --cache-from $DOCKER_IMAGE:latest -f Dockerfiles/DockerfileCPU --target test --tag ${DOCKER_IMAGE}:${DOCKER_TAG} --tag ${DOCKER_IMAGE}:latest .
    - docker push ${DOCKER_IMAGE}:${DOCKER_TAG}
    - docker push ${DOCKER_IMAGE}:latest

lint:
    stage: lint
    <<: *docker_common
    script:
      - *docker_login
      - docker pull ${DOCKER_IMAGE}:${DOCKER_TAG}
      - docker run ${DOCKER_IMAGE}:${DOCKER_TAG} python -m flake8 --config=setup.cfg ./src
      - docker run ${DOCKER_IMAGE}:${DOCKER_TAG} python -m mypy --config-file=pyproject.toml ./src
    needs:
      - build_image

# unit_tests:
#     stage: tests
#     <<: *docker_common
#     script:
#       - *docker_login
#       - docker pull ${DOCKER_IMAGE}:${DOCKER_TAG}
#       - docker run ${DOCKER_IMAGE}:${DOCKER_TAG} bash -c 'make run_unit_tests'
#     needs:
#       - build_image
